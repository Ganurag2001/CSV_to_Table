 import CsvTable.Repo

Data creation and insertion
 %CsvTable.Accounts.User{name: "Anurag", email: "mytime", age: 12} |> CsvTable.Repo.insert()

  %CsvTable.Accounts.User{name: "Anmol", email: "time", age: 12} |> CsvTable.Repo.insert()

   %CsvTable.Accounts.User{name: "Anu", email: "mytime", age: 12} |> CsvTable.Repo.insert()

     %CsvTable.Accounts.User{name: "Anml", email: "time", age: 12} |> CsvTable.Repo.insert()

   %CsvTable.Accounts.User{name: "Anur", email: "mytime", age: 12} |> CsvTable.Repo.insert()


 data = CsvTable.Repo.all(CsvTable.Accounts.User)

Create data for csv file 

dataset = Enum.join(for user <- data do "#{user.name}, #{user.age}, #{user.email}" end, "\n")


csv_content = "name,age,email\n #{dataset}"

Write data for csv file

File.write!("output.csv", csv_content)


























index.html.heex

<.header>
  Listing Uploads
  <:actions>
    <.link patch={~p"/uploads/new"}>
      <.button>New Upload</.button>
    </.link>
  </:actions>
</.header>

<.table
  id="uploads"
  rows={@streams.uploads}
  row_click={fn {_id, upload} -> JS.navigate(~p"/uploads/#{upload}") end}
>
  <:col :let={{_id, upload}} label="Name"><%= upload.name %></:col>
  <:col :let={{_id, upload}} label="Age"><%= upload.age %></:col>
  <:col :let={{_id, upload}} label="Email"><%= upload.email %></:col>
  <:action :let={{_id, upload}}>
    <div class="sr-only">
      <.link navigate={~p"/uploads/#{upload}"}>Show</.link>
    </div>
    <.link patch={~p"/uploads/#{upload}/edit"}>Edit</.link>
  </:action>
  <:action :let={{id, upload}}>
    <.link
      phx-click={JS.push("delete", value: %{id: upload.id}) |> hide("##{id}")}
      data-confirm="Are you sure?"
    >
      Delete
    </.link>
  </:action>
</.table>

<.modal :if={@live_action in [:new, :edit]} id="upload-modal" show on_cancel={JS.patch(~p"/uploads")}>
  <.live_component
    module={CsvTableWeb.UploadLive.FormComponent}
    id={@upload.id || :new}
    title={@page_title}
    action={@live_action}
    upload={@upload}
    patch={~p"/uploads"}
  />
</.modal>

